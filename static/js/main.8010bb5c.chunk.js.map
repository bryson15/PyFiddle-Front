{"version":3,"sources":["components/NavBar/assets/github-logo.svg","components/NavBar/assets/plus-icon.svg","components/NavBar/assets/share-icon.svg","components/NavBar/assets/fork-icon.svg","components/NavBar/assets/white-logo.svg","components/NavBar/assets/play-icon.svg","components/NavBar/assets/save-icon.svg","components/SideBar/assets/clock-icon.svg","context/SnippetContext.js","components/NavBar/NavBar.js","components/SideBar/SideBar.js","components/CodeEditor/CodeEditor.js","App.js","index.js"],"names":["module","exports","SnippetContext","createContext","useSnippets","useContext","SnippetProvider","_ref","children","snippets","setSnippets","useState","id","title","selectedId","setSelectedId","React","createElement","Provider","value","handleSnippetClick","moveSnippetToFront","prev","find","s","filter","NavBar","text","setText","className","src","whiteLogo","alt","draggable","onClick","style","width","playIcon","saveIcon","onChange","event","target","onFocus","select","onBlur","handleBlur","trim","size","length","placeholder","shareIcon","forkIcon","plusIcon","href","githubLogo","SideBar","clockIcon","map","snippet","key","concat","CodeEditor","code","setCode","CodeMirror","height","extensions","python","theme","oneDark","viewUpdate","console","log","App","display","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0HAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,oUCE3C,MAAMC,EAAiBC,0BAEVC,EAAcA,IAAMC,qBAAWH,GAE/BI,EAAkBC,IAAmB,IAAlB,SAAEC,GAAUD,EACxC,MAAOE,EAAUC,GAAeC,mBAAS,CACrC,CAAEC,GAAI,EAAGC,MAAO,oBAChB,CAAED,GAAI,EAAGC,MAAO,mBAChB,CAAED,GAAI,EAAGC,MAAO,uBAChB,CAAED,GAAI,EAAGC,MAAO,sDAEbC,EAAYC,GAAiBJ,mBAAS,GAgB7C,OACIK,IAAAC,cAACf,EAAegB,SAAQ,CAACC,MAAO,CAAEV,WAAUK,aAAYM,mBAfhCR,IACxBG,EAAcH,IAc8DS,mBAXrDA,KACJ,OAAfP,GACAJ,EAAYY,GAGD,CAFSA,EAAKC,KAAKC,GAAKA,EAAEZ,KAAOE,MACzBQ,EAAKG,OAAOD,GAAKA,EAAEZ,KAAOE,QAQ5CN,ICuDEkB,MA1EAA,KACb,MAAM,mBAAEL,GAAuBjB,KAGxBuB,EAAMC,GAAWjB,mBADJ,oBAiBpB,OACEK,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKY,UAAU,YACbb,IAAAC,cAAA,OAAKY,UAAU,QACbb,IAAAC,cAAA,OAAKa,IAAKC,IAAWC,IAAI,gBAAgBC,UAAU,UACnDjB,IAAAC,cAAA,SAAG,aAELD,IAAAC,cAAA,OAAKiB,QAASb,EAAoBQ,UAAU,cAC1Cb,IAAAC,cAAA,OAAKkB,MAAO,CAACC,MAAO,WAAYN,IAAKO,IAAUJ,UAAU,UACzDjB,IAAAC,cAAA,SAAG,QAELD,IAAAC,cAAA,OAAKiB,QAASb,EAAoBQ,UAAU,cAC1Cb,IAAAC,cAAA,OAAKa,IAAKQ,IAAUL,UAAU,UAC9BjB,IAAAC,cAAA,SAAG,UAGPD,IAAAC,cAAA,OAAKY,UAAU,cACbb,IAAAC,cAAA,SAAOE,MAAOQ,EAAMY,SA/BJC,IACpBZ,EAAQY,EAAMC,OAAOtB,QA8B2BuB,QArB7BF,IACnBA,EAAMC,OAAOE,UAoByDC,OA3BrDC,KACG,KAAhBlB,EAAKmB,QACPlB,EATgB,qBAkCwEmB,KAAMpB,EAAKqB,OAAS,EAAGC,YAlC/F,sBAoChBjC,IAAAC,cAAA,OAAKY,UAAU,aACbb,IAAAC,cAAA,OAAKY,UAAU,cACbb,IAAAC,cAAA,OAAKa,IAAKoB,IAAWjB,UAAU,UAC/BjB,IAAAC,cAAA,SAAG,UAELD,IAAAC,cAAA,OAAKY,UAAU,cACbb,IAAAC,cAAA,OAAKkB,MAAO,CAACC,MAAO,WAAYN,IAAKqB,IAAUlB,UAAU,UACzDjB,IAAAC,cAAA,SAAG,SAELD,IAAAC,cAAA,OAAKY,UAAU,cACbb,IAAAC,cAAA,OAAKa,IAAKsB,IAAUnB,UAAU,UAC9BjB,IAAAC,cAAA,SAAG,gBAELD,IAAAC,cAAA,KAAGoC,KAAK,gIAAgIxB,UAAU,sBAChJb,IAAAC,cAAA,OAAKa,IAAKwB,IAAYrB,UAAU,UAChCjB,IAAAC,cAAA,SAAG,2B,uBCxCEsC,MApBCA,KACZ,MAAM,SAAE9C,EAAQ,WAAEK,EAAU,mBAAEM,GAAuBhB,IAErD,OACIY,IAAAC,cAAA,OAAKY,UAAU,QACXb,IAAAC,cAAA,OAAKY,UAAU,gBACXb,IAAAC,cAAA,OAAKa,IAAK0B,IAAWvB,UAAU,UAC/BjB,IAAAC,cAAA,SAAG,WAENR,EAASgD,IAAKC,GACX1C,IAAAC,cAAA,OAAK0C,IAAKD,EAAQ9C,GACbiB,UAAS,kBAAA+B,OAAoBF,EAAQ9C,KAAOE,EAAa,0BAA4B,IACrFoB,QAASA,IAAMd,EAAmBsC,EAAQ9C,KAC3CI,IAAAC,cAAA,SAAIyC,EAAQ7C,W,uBCIjBgD,MAlBf,WACE,MAAOC,EAAMC,GAAW/C,IAAML,SAAS,IAEvC,OACEK,IAAAC,cAAC+C,IAAU,CACT7C,MAAO2C,EACP3B,MAAO,CAACC,MAAO,QACf6B,OAAO,OACPC,WAAY,CAACC,eACbC,MAAOC,IACP9B,SAAUA,CAACpB,EAAOmD,KAChBP,EAAQ5C,GACRoD,QAAQC,IAAIrD,O,MCMLsD,MAZHA,IAETzD,IAAAC,cAACX,EAAe,KACjBU,IAAAC,cAACS,EAAM,MACPV,IAAAC,cAAA,OAAKkB,MAAO,CAAEuC,QAAS,OAAQT,OAAQ,SACtCjD,IAAAC,cAACsC,EAAO,MACRvC,IAAAC,cAAC4C,EAAU,QCZDc,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/D,IAAAC,cAACD,IAAMgE,WAAU,KACfhE,IAAAC,cAACwD,EAAG,U","file":"static/js/main.8010bb5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.37d5908d.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus-icon.7543a22b.svg\";","module.exports = __webpack_public_path__ + \"static/media/share-icon.12a6659c.svg\";","module.exports = __webpack_public_path__ + \"static/media/fork-icon.ce58df74.svg\";","module.exports = __webpack_public_path__ + \"static/media/white-logo.751b9bb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/play-icon.9486d6e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/save-icon.5ec3d4e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock-icon.f91c8809.svg\";","import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst SnippetContext = createContext();\r\n\r\nexport const useSnippets = () => useContext(SnippetContext);\r\n\r\nexport const SnippetProvider = ({ children }) => {\r\n    const [snippets, setSnippets] = useState([\r\n        { id: 0, title: \"Untitled Snippet\" },\r\n        { id: 1, title: \"My Snippet Name\" },\r\n        { id: 2, title: \"Interesting Project\" },\r\n        { id: 3, title: \"This snippet name is quite long really too long\" }\r\n    ]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const handleSnippetClick = (id) => {\r\n        setSelectedId(id);\r\n    };\r\n\r\n    const moveSnippetToFront = () => {\r\n        if (selectedId !== null) {\r\n            setSnippets(prev => {\r\n                const snippet = prev.find(s => s.id === selectedId);\r\n                const others = prev.filter(s => s.id !== selectedId);\r\n                return [snippet, ...others];\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SnippetContext.Provider value={{ snippets, selectedId, handleSnippetClick, moveSnippetToFront }}>\r\n            {children}\r\n        </SnippetContext.Provider>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './NavBar.css';\r\nimport githubLogo from \"./assets/github-logo.svg\";\r\nimport plusIcon from \"./assets/plus-icon.svg\";\r\nimport shareIcon from \"./assets/share-icon.svg\";\r\nimport forkIcon from \"./assets/fork-icon.svg\";\r\nimport whiteLogo from \"./assets/white-logo.svg\";\r\nimport playIcon from \"./assets/play-icon.svg\";\r\nimport saveIcon from \"./assets/save-icon.svg\";\r\n//import { Link } from 'react-router-dom';\r\nimport { useSnippets } from '../../context/SnippetContext';\r\n\r\nconst NavBar = () => {\r\n  const { moveSnippetToFront } = useSnippets();\r\n\r\n  const placeholder = \"Untitled Snippet\";\r\n  const [text, setText] = useState(placeholder);\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (text.trim() === \"\") {\r\n      setText(placeholder);\r\n    }\r\n  };\r\n\r\n  const handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-left\">\r\n        <div className=\"logo\" >\r\n          <img src={whiteLogo} alt=\"PyFiddle Logo\" draggable=\"false\" />\r\n          <p>PyFiddle</p>\r\n        </div>\r\n        <div onClick={moveSnippetToFront} className=\"nav-button\">\r\n          <img style={{width: \"0.75rem\"}} src={playIcon} draggable=\"false\" />\r\n          <p>Run</p>\r\n        </div>\r\n        <div onClick={moveSnippetToFront} className=\"nav-button\">\r\n          <img src={saveIcon} draggable=\"false\" />\r\n          <p>Save</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-center\">\r\n        <input value={text} onChange={handleChange} onFocus={handleFocus} onBlur={handleBlur} size={text.length + 1} placeholder={placeholder} />\r\n      </div>\r\n      <div className=\"nav-right\">\r\n        <div className=\"nav-button\">\r\n          <img src={shareIcon} draggable=\"false\" />\r\n          <p>Share</p>\r\n        </div>\r\n        <div className=\"nav-button\">\r\n          <img style={{width: \"0.75rem\"}} src={forkIcon} draggable=\"false\" />\r\n          <p>Fork</p>\r\n        </div>\r\n        <div className=\"nav-button\">\r\n          <img src={plusIcon} draggable=\"false\" />\r\n          <p>New Snippet</p>\r\n        </div>\r\n        <a href=\"https://github.com/login/oauth/authorize?client_id=Ov23li0TDwePfmk3JXuQ&scope=gist&redirect_uri=https://api.pyfiddle.net/auth\" className=\"sign-in nav-button\">\r\n          <img src={githubLogo} draggable=\"false\" />\r\n          <p>Sign in with Github</p>\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n/* Uncomment below code to display the NavBar\r\n<nav style={styles.navStyle}>\r\n  <ul style={styles.ulStyle}>\r\n    <li style={styles.liStyle}><Link to=\"/\">Home</Link></li>\r\n    <li style={styles.liStyle}><Link to=\"/about\">About</Link></li>\r\n    <li style={styles.liStyle}><Link to=\"/contact\">Contact</Link></li>\r\n  </ul>\r\n</nav>\r\n*/\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport clockIcon from \"./assets/clock-icon.svg\";\r\nimport './SideBar.css';\r\n\r\nimport { useSnippets } from '../../context/SnippetContext';\r\n\r\nconst SideBar = () => {\r\n    const { snippets, selectedId, handleSnippetClick } = useSnippets();\r\n    \r\n    return (\r\n        <div className=\"side\">\r\n            <div className=\"side-heading\">\r\n                <img src={clockIcon} draggable=\"false\" />\r\n                <p>Recent</p>\r\n            </div>\r\n            {snippets.map((snippet) => (\r\n                <div key={snippet.id}\r\n                     className={`recent-snippet ${snippet.id === selectedId ? 'recent-snippet-selected' : ''}`}\r\n                     onClick={() => handleSnippetClick(snippet.id)}>\r\n                    <p>{snippet.title}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n\r\n/*\r\nexport default SideBar;\r\n\r\n\r\n    return (\r\n        <div className=\"side\">\r\n            <div className=\"side-heading\">\r\n                <img src={clockIcon} draggable=\"false\" />\r\n                <p>Recent</p>\r\n            </div>\r\n            {snippets.map((snippet) => (\r\n                <div key={snippet.id}\r\n                     className={`recent-snippet ${snippet.id === selectedId ? 'recent-snippet-selected' : ''}`}\r\n                     onClick={() => handleSnippetClick(snippet.id)}>\r\n                    <p>{snippet.title}</p>\r\n                </div>\r\n            ))}\r\n            {/* Optionally, you could add a button to trigger reordering }\r\n            <button onClick={moveSnippetToFront}>Reorder Snippets</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n*/","import React from 'react';\r\nimport CodeMirror from '@uiw/react-codemirror';\r\nimport { python } from '@codemirror/lang-python'; \r\nimport { oneDark } from '@codemirror/theme-one-dark';\r\n\r\nfunction CodeEditor() {\r\n  const [code, setCode] = React.useState(\"\");\r\n\r\n  return (\r\n    <CodeMirror\r\n      value={code}\r\n      style={{width: \"100%\"}}\r\n      height=\"60vh\"\r\n      extensions={[python()]} \r\n      theme={oneDark}\r\n      onChange={(value, viewUpdate) => {\r\n        setCode(value);\r\n        console.log(value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar/NavBar';\nimport SideBar from './components/SideBar/SideBar';\nimport CodeEditor from './components/CodeEditor/CodeEditor';\n\nimport { SnippetProvider } from './context/SnippetContext';\n\nimport './App.css';\n\nconst App = () => {\n\treturn (\n\t  <SnippetProvider>\n\t\t<NavBar />\n\t\t<div style={{ display: \"flex\", height: \"100%\" }}>\n\t\t\t<SideBar />\n\t\t\t<CodeEditor />\n\t\t</div>\n\t  </SnippetProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}